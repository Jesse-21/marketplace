// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/marketplace/marketplace_service.proto

package marketplace

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

func init() {
	proto.RegisterFile("api/v1/marketplace/marketplace_service.proto", fileDescriptor_ca5df0733d945be2)
}
func init() {
	golang_proto.RegisterFile("api/v1/marketplace/marketplace_service.proto", fileDescriptor_ca5df0733d945be2)
}

var fileDescriptor_ca5df0733d945be2 = []byte{
	// 904 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x96, 0x41, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0xd9, 0x04, 0x95, 0x66, 0x4a, 0x53, 0x67, 0xd2, 0x40, 0x71, 0x1a, 0x33, 0xd9, 0x00,
	0x02, 0xe3, 0xec, 0xc6, 0x69, 0x10, 0x52, 0x38, 0x6d, 0x2b, 0x61, 0x22, 0x28, 0x8a, 0xdc, 0x0b,
	0xaa, 0x90, 0xaa, 0xf1, 0xee, 0xf3, 0x7a, 0xe8, 0x7a, 0x66, 0x99, 0x99, 0x75, 0x30, 0x55, 0x2e,
	0xf0, 0x0d, 0x16, 0x71, 0x01, 0x71, 0xe2, 0xc2, 0x85, 0x3b, 0x12, 0x17, 0x6e, 0xe4, 0x88, 0xc4,
	0x91, 0x0b, 0x4a, 0xf9, 0x20, 0x68, 0xc7, 0xbb, 0xf6, 0x26, 0x76, 0xc1, 0xaa, 0x94, 0xde, 0xc6,
	0x33, 0xff, 0xf7, 0xe6, 0xf7, 0x7f, 0xef, 0x4d, 0x36, 0xa8, 0x41, 0x63, 0xe6, 0x0e, 0x9a, 0x6e,
	0x9f, 0xca, 0x87, 0xa0, 0xe3, 0x88, 0xfa, 0x50, 0x5e, 0x3f, 0x50, 0x20, 0x07, 0xcc, 0x07, 0x27,
	0x96, 0x42, 0x0b, 0x5c, 0x2b, 0x1d, 0x39, 0x34, 0x66, 0xce, 0xa0, 0xe9, 0x94, 0xb6, 0xaa, 0x0d,
	0x23, 0xf3, 0xb7, 0x43, 0xe0, 0xdb, 0xea, 0x88, 0x86, 0x21, 0x48, 0x57, 0xc4, 0x9a, 0x09, 0xae,
	0x5c, 0xca, 0xb9, 0xd0, 0xd4, 0xac, 0x47, 0xd9, 0xaa, 0x37, 0x43, 0x21, 0xc2, 0x08, 0xdc, 0x0c,
	0x61, 0xfa, 0x74, 0x3b, 0x64, 0xba, 0x97, 0x74, 0x1c, 0x5f, 0xf4, 0xdd, 0x50, 0x84, 0xc2, 0x35,
	0xdb, 0x9d, 0xa4, 0x6b, 0x7e, 0x99, 0x1f, 0x66, 0x95, 0xcb, 0x37, 0x66, 0x18, 0xa1, 0x52, 0x17,
	0xd9, 0x36, 0x67, 0x1c, 0xfb, 0x12, 0xa8, 0x16, 0x32, 0x97, 0xec, 0xfe, 0xb8, 0x8c, 0xf0, 0xdd,
	0xc9, 0xf1, 0xbd, 0x91, 0x73, 0xfc, 0xbd, 0x85, 0x96, 0xee, 0x64, 0x4a, 0xf0, 0xa4, 0xc6, 0x3b,
	0xce, 0x7f, 0x97, 0xc0, 0x19, 0x4b, 0xdb, 0xf0, 0x79, 0x02, 0x4a, 0x57, 0xdf, 0xfe, 0xbf, 0x08,
	0xa3, 0x55, 0xb1, 0xe0, 0x0a, 0x6c, 0x37, 0xf5, 0xd6, 0xd0, 0xf3, 0x9e, 0xd4, 0x0a, 0x5f, 0x1d,
	0x65, 0x22, 0x94, 0x13, 0x2a, 0xf5, 0x57, 0x7f, 0xfe, 0xf3, 0xcd, 0xc2, 0x8a, 0xfd, 0xa2, 0x9b,
	0xfb, 0xc8, 0xac, 0xed, 0x5b, 0x75, 0xfc, 0xad, 0x85, 0x5e, 0x68, 0x81, 0x36, 0x11, 0xf3, 0xdc,
	0xa4, 0x0a, 0xac, 0xc6, 0x7c, 0xe2, 0x09, 0xd7, 0x8d, 0x9c, 0xab, 0xd2, 0x02, 0x4d, 0x22, 0xa6,
	0x34, 0x11, 0xdd, 0x8c, 0x4c, 0x19, 0xb4, 0x65, 0x7c, 0x06, 0x0d, 0x7f, 0x67, 0xa1, 0x4b, 0x23,
	0x2e, 0x5c, 0x9f, 0xab, 0x00, 0x4f, 0x51, 0xac, 0x77, 0x53, 0x6f, 0x3d, 0x87, 0x5a, 0xcd, 0xa0,
	0x02, 0xd0, 0x94, 0x45, 0x19, 0x13, 0x61, 0xbc, 0x2b, 0x0c, 0xd7, 0x2a, 0x5e, 0x29, 0x73, 0xb9,
	0x8f, 0x58, 0x70, 0x8c, 0x7f, 0xb6, 0xd0, 0x95, 0x16, 0xe8, 0x3b, 0x79, 0xff, 0xb1, 0x3b, 0x57,
	0x53, 0x85, 0x1c, 0x17, 0x6f, 0x67, 0xfe, 0x80, 0x9c, 0xf5, 0xbd, 0xd4, 0x23, 0xe8, 0xf2, 0xf8,
	0xc6, 0xeb, 0xe5, 0x22, 0x16, 0x73, 0x68, 0x80, 0x31, 0xae, 0x14, 0xc0, 0xc5, 0x3e, 0xfe, 0xc5,
	0x42, 0x68, 0xc2, 0x8b, 0x9d, 0x39, 0x6f, 0x2f, 0x68, 0xdd, 0xb9, 0xf5, 0x39, 0xec, 0x41, 0xea,
	0xbd, 0x55, 0x82, 0xdd, 0x28, 0x15, 0x37, 0x2b, 0x2c, 0xa1, 0x1d, 0x91, 0xe8, 0x02, 0xdb, 0x50,
	0xbf, 0x8c, 0xd7, 0xce, 0x53, 0x8f, 0x4a, 0x7d, 0x62, 0xa1, 0x4a, 0x3e, 0x9f, 0xb7, 0x87, 0x85,
	0x81, 0xbd, 0x79, 0x66, 0x6f, 0x2c, 0x7f, 0xba, 0x89, 0x3d, 0x4c, 0xbd, 0xad, 0x7c, 0x38, 0xd6,
	0xcf, 0x4f, 0x2c, 0xe9, 0x0c, 0xcf, 0xd0, 0xbf, 0x86, 0xed, 0x69, 0xfa, 0x7c, 0xf5, 0x80, 0x05,
	0xc7, 0xa3, 0x91, 0xfe, 0xdd, 0x42, 0x37, 0x5a, 0xa0, 0xef, 0xc5, 0x42, 0x47, 0x2c, 0xec, 0xe9,
	0xf7, 0x81, 0xea, 0x44, 0x42, 0x70, 0xd1, 0x6f, 0xef, 0x30, 0xf5, 0xde, 0x40, 0x4b, 0xe3, 0x6b,
	0xf1, 0x2b, 0x65, 0x3b, 0xdd, 0x1c, 0x62, 0xf2, 0x12, 0x37, 0xf1, 0xab, 0x85, 0x19, 0x55, 0xc4,
	0x8c, 0x66, 0xbf, 0xd0, 0xe2, 0x5f, 0x2d, 0x74, 0xbd, 0xec, 0xe4, 0x23, 0x36, 0x80, 0x8b, 0x76,
	0xf1, 0x41, 0xea, 0xd9, 0x65, 0x17, 0x6b, 0x65, 0x17, 0x11, 0x1b, 0xc0, 0xc4, 0xc1, 0x06, 0x5e,
	0x7f, 0x82, 0x83, 0x4c, 0x87, 0xff, 0xb2, 0xd0, 0xcd, 0x59, 0x7d, 0x78, 0x96, 0xcf, 0xf9, 0x93,
	0xd4, 0xab, 0x97, 0xdd, 0x6c, 0xcc, 0xec, 0xc9, 0x99, 0x87, 0xfd, 0x3a, 0xde, 0x9a, 0x76, 0x35,
	0x1e, 0xb7, 0x71, 0x6f, 0x7e, 0xb0, 0xd0, 0x52, 0x0b, 0xf4, 0xdd, 0xe1, 0x45, 0x37, 0xe4, 0x9d,
	0x73, 0x7f, 0x3d, 0x0b, 0xfa, 0xfe, 0x70, 0xd2, 0x89, 0x15, 0x7c, 0xad, 0x60, 0xee, 0x0f, 0x4d,
	0x0b, 0x6e, 0xff, 0xb4, 0x98, 0x7a, 0x5f, 0x2f, 0xe2, 0x97, 0xd0, 0xb5, 0xd2, 0xb7, 0x92, 0x78,
	0x87, 0x07, 0xbb, 0x8b, 0x4d, 0x67, 0xa7, 0xba, 0x59, 0xbe, 0x2f, 0x80, 0x81, 0x33, 0x60, 0x01,
	0x08, 0x5f, 0x30, 0xee, 0x70, 0xd0, 0x47, 0x42, 0x3e, 0xac, 0x5b, 0x0b, 0xbb, 0x15, 0x1a, 0xc7,
	0x11, 0xf3, 0xcd, 0xf7, 0xde, 0xfd, 0x4c, 0x09, 0xbe, 0x3f, 0xb5, 0xd3, 0x6e, 0xa2, 0xc5, 0xbd,
	0x9d, 0x26, 0xae, 0xa3, 0x37, 0xdb, 0xa0, 0x13, 0xc9, 0x21, 0x20, 0x47, 0x3d, 0xe0, 0x44, 0xf7,
	0x80, 0x24, 0x0a, 0x24, 0x61, 0x8a, 0x70, 0xa1, 0x49, 0x24, 0xc2, 0x10, 0x02, 0xc2, 0xb8, 0xd3,
	0x3e, 0xcc, 0x42, 0x6e, 0xe1, 0x03, 0xd4, 0x7a, 0x42, 0x48, 0x20, 0x60, 0x14, 0xd4, 0xa3, 0x03,
	0x20, 0x31, 0xc8, 0x3e, 0x53, 0x8a, 0x09, 0x4e, 0xb4, 0x20, 0xd4, 0xf7, 0x41, 0x29, 0xa3, 0x95,
	0xa0, 0x44, 0x22, 0x7d, 0x70, 0xda, 0x7e, 0x96, 0x71, 0x0f, 0x7f, 0x8a, 0xea, 0xd3, 0x19, 0x0b,
	0xd5, 0x24, 0x2b, 0x7c, 0xc1, 0x94, 0x76, 0xb0, 0xb3, 0xdb, 0xc0, 0xf5, 0x47, 0xc4, 0xee, 0x83,
	0x52, 0x34, 0x04, 0x7b, 0x9f, 0xd8, 0x1f, 0x0b, 0x4d, 0xba, 0x22, 0xe1, 0x81, 0xdd, 0x20, 0x76,
	0x97, 0x41, 0x14, 0x28, 0x7b, 0x9f, 0xf0, 0x24, 0x8a, 0xc8, 0xf1, 0xfd, 0x2d, 0xb4, 0x89, 0x90,
	0x17, 0xb3, 0x0f, 0x61, 0xe8, 0x25, 0xba, 0x87, 0x57, 0x2f, 0x2f, 0x54, 0xaf, 0x66, 0x2b, 0x21,
	0xd9, 0x97, 0xa6, 0x22, 0x64, 0xa1, 0x53, 0x41, 0xcb, 0x67, 0x44, 0xcf, 0x9d, 0x9c, 0xd6, 0xac,
	0x3f, 0x4e, 0x6b, 0xd6, 0xdf, 0xa7, 0x35, 0xeb, 0xb7, 0xc7, 0x35, 0xeb, 0xe4, 0x71, 0xcd, 0xba,
	0x7f, 0xa5, 0x54, 0xfe, 0xce, 0x25, 0xf3, 0x7f, 0xcd, 0xad, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x44, 0x54, 0x43, 0x81, 0xe4, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MarketplaceServiceClient is the client API for MarketplaceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MarketplaceServiceClient interface {
	CreateArt(ctx context.Context, in *CreateArtRequest, opts ...grpc.CallOption) (*ArtResponse, error)
	GetArts(ctx context.Context, in *ArtsRequest, opts ...grpc.CallOption) (*ArtsResponse, error)
	GetArt(ctx context.Context, in *ArtRequest, opts ...grpc.CallOption) (*ArtResponse, error)
	GetCreators(ctx context.Context, in *CreatorsRequest, opts ...grpc.CallOption) (*CreatorsResponse, error)
	GetCreator(ctx context.Context, in *CreatorRequest, opts ...grpc.CallOption) (*CreatorResponse, error)
	GetArtsByCreator(ctx context.Context, in *ArtsByCreatorRequest, opts ...grpc.CallOption) (*ArtsResponse, error)
	GetSpotlightFeaturedArts(ctx context.Context, in *ArtsRequest, opts ...grpc.CallOption) (*ArtsResponse, error)
	GetSpotlightLiveArts(ctx context.Context, in *ArtsRequest, opts ...grpc.CallOption) (*ArtsResponse, error)
	GetSpotlightFeaturedCreators(ctx context.Context, in *CreatorsRequest, opts ...grpc.CallOption) (*CreatorsResponse, error)
	GetMyArts(ctx context.Context, in *ArtsRequest, opts ...grpc.CallOption) (*ArtsResponse, error)
}

type marketplaceServiceClient struct {
	cc *grpc.ClientConn
}

func NewMarketplaceServiceClient(cc *grpc.ClientConn) MarketplaceServiceClient {
	return &marketplaceServiceClient{cc}
}

func (c *marketplaceServiceClient) CreateArt(ctx context.Context, in *CreateArtRequest, opts ...grpc.CallOption) (*ArtResponse, error) {
	out := new(ArtResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/CreateArt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) GetArts(ctx context.Context, in *ArtsRequest, opts ...grpc.CallOption) (*ArtsResponse, error) {
	out := new(ArtsResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/GetArts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) GetArt(ctx context.Context, in *ArtRequest, opts ...grpc.CallOption) (*ArtResponse, error) {
	out := new(ArtResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/GetArt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) GetCreators(ctx context.Context, in *CreatorsRequest, opts ...grpc.CallOption) (*CreatorsResponse, error) {
	out := new(CreatorsResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/GetCreators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) GetCreator(ctx context.Context, in *CreatorRequest, opts ...grpc.CallOption) (*CreatorResponse, error) {
	out := new(CreatorResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/GetCreator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) GetArtsByCreator(ctx context.Context, in *ArtsByCreatorRequest, opts ...grpc.CallOption) (*ArtsResponse, error) {
	out := new(ArtsResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/GetArtsByCreator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) GetSpotlightFeaturedArts(ctx context.Context, in *ArtsRequest, opts ...grpc.CallOption) (*ArtsResponse, error) {
	out := new(ArtsResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/GetSpotlightFeaturedArts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) GetSpotlightLiveArts(ctx context.Context, in *ArtsRequest, opts ...grpc.CallOption) (*ArtsResponse, error) {
	out := new(ArtsResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/GetSpotlightLiveArts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) GetSpotlightFeaturedCreators(ctx context.Context, in *CreatorsRequest, opts ...grpc.CallOption) (*CreatorsResponse, error) {
	out := new(CreatorsResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/GetSpotlightFeaturedCreators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) GetMyArts(ctx context.Context, in *ArtsRequest, opts ...grpc.CallOption) (*ArtsResponse, error) {
	out := new(ArtsResponse)
	err := c.cc.Invoke(ctx, "/marketplace.api.v1.marketplace.MarketplaceService/GetMyArts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MarketplaceServiceServer is the server API for MarketplaceService service.
type MarketplaceServiceServer interface {
	CreateArt(context.Context, *CreateArtRequest) (*ArtResponse, error)
	GetArts(context.Context, *ArtsRequest) (*ArtsResponse, error)
	GetArt(context.Context, *ArtRequest) (*ArtResponse, error)
	GetCreators(context.Context, *CreatorsRequest) (*CreatorsResponse, error)
	GetCreator(context.Context, *CreatorRequest) (*CreatorResponse, error)
	GetArtsByCreator(context.Context, *ArtsByCreatorRequest) (*ArtsResponse, error)
	GetSpotlightFeaturedArts(context.Context, *ArtsRequest) (*ArtsResponse, error)
	GetSpotlightLiveArts(context.Context, *ArtsRequest) (*ArtsResponse, error)
	GetSpotlightFeaturedCreators(context.Context, *CreatorsRequest) (*CreatorsResponse, error)
	GetMyArts(context.Context, *ArtsRequest) (*ArtsResponse, error)
}

// UnimplementedMarketplaceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMarketplaceServiceServer struct {
}

func (*UnimplementedMarketplaceServiceServer) CreateArt(ctx context.Context, req *CreateArtRequest) (*ArtResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArt not implemented")
}
func (*UnimplementedMarketplaceServiceServer) GetArts(ctx context.Context, req *ArtsRequest) (*ArtsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArts not implemented")
}
func (*UnimplementedMarketplaceServiceServer) GetArt(ctx context.Context, req *ArtRequest) (*ArtResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArt not implemented")
}
func (*UnimplementedMarketplaceServiceServer) GetCreators(ctx context.Context, req *CreatorsRequest) (*CreatorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCreators not implemented")
}
func (*UnimplementedMarketplaceServiceServer) GetCreator(ctx context.Context, req *CreatorRequest) (*CreatorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCreator not implemented")
}
func (*UnimplementedMarketplaceServiceServer) GetArtsByCreator(ctx context.Context, req *ArtsByCreatorRequest) (*ArtsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtsByCreator not implemented")
}
func (*UnimplementedMarketplaceServiceServer) GetSpotlightFeaturedArts(ctx context.Context, req *ArtsRequest) (*ArtsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpotlightFeaturedArts not implemented")
}
func (*UnimplementedMarketplaceServiceServer) GetSpotlightLiveArts(ctx context.Context, req *ArtsRequest) (*ArtsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpotlightLiveArts not implemented")
}
func (*UnimplementedMarketplaceServiceServer) GetSpotlightFeaturedCreators(ctx context.Context, req *CreatorsRequest) (*CreatorsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpotlightFeaturedCreators not implemented")
}
func (*UnimplementedMarketplaceServiceServer) GetMyArts(ctx context.Context, req *ArtsRequest) (*ArtsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyArts not implemented")
}

func RegisterMarketplaceServiceServer(s *grpc.Server, srv MarketplaceServiceServer) {
	s.RegisterService(&_MarketplaceService_serviceDesc, srv)
}

func _MarketplaceService_CreateArt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).CreateArt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/CreateArt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).CreateArt(ctx, req.(*CreateArtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_GetArts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).GetArts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/GetArts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).GetArts(ctx, req.(*ArtsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_GetArt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).GetArt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/GetArt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).GetArt(ctx, req.(*ArtRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_GetCreators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).GetCreators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/GetCreators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).GetCreators(ctx, req.(*CreatorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_GetCreator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).GetCreator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/GetCreator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).GetCreator(ctx, req.(*CreatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_GetArtsByCreator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtsByCreatorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).GetArtsByCreator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/GetArtsByCreator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).GetArtsByCreator(ctx, req.(*ArtsByCreatorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_GetSpotlightFeaturedArts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).GetSpotlightFeaturedArts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/GetSpotlightFeaturedArts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).GetSpotlightFeaturedArts(ctx, req.(*ArtsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_GetSpotlightLiveArts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).GetSpotlightLiveArts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/GetSpotlightLiveArts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).GetSpotlightLiveArts(ctx, req.(*ArtsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_GetSpotlightFeaturedCreators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).GetSpotlightFeaturedCreators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/GetSpotlightFeaturedCreators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).GetSpotlightFeaturedCreators(ctx, req.(*CreatorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_GetMyArts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArtsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).GetMyArts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/marketplace.api.v1.marketplace.MarketplaceService/GetMyArts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).GetMyArts(ctx, req.(*ArtsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MarketplaceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "marketplace.api.v1.marketplace.MarketplaceService",
	HandlerType: (*MarketplaceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateArt",
			Handler:    _MarketplaceService_CreateArt_Handler,
		},
		{
			MethodName: "GetArts",
			Handler:    _MarketplaceService_GetArts_Handler,
		},
		{
			MethodName: "GetArt",
			Handler:    _MarketplaceService_GetArt_Handler,
		},
		{
			MethodName: "GetCreators",
			Handler:    _MarketplaceService_GetCreators_Handler,
		},
		{
			MethodName: "GetCreator",
			Handler:    _MarketplaceService_GetCreator_Handler,
		},
		{
			MethodName: "GetArtsByCreator",
			Handler:    _MarketplaceService_GetArtsByCreator_Handler,
		},
		{
			MethodName: "GetSpotlightFeaturedArts",
			Handler:    _MarketplaceService_GetSpotlightFeaturedArts_Handler,
		},
		{
			MethodName: "GetSpotlightLiveArts",
			Handler:    _MarketplaceService_GetSpotlightLiveArts_Handler,
		},
		{
			MethodName: "GetSpotlightFeaturedCreators",
			Handler:    _MarketplaceService_GetSpotlightFeaturedCreators_Handler,
		},
		{
			MethodName: "GetMyArts",
			Handler:    _MarketplaceService_GetMyArts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/marketplace/marketplace_service.proto",
}
