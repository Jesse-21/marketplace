// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/marketplace/creators.proto

package marketplace

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type CreatorResponse struct {
	Id                   int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string             `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Username             *types.StringValue `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Name                 *types.StringValue `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreatorResponse) Reset()         { *m = CreatorResponse{} }
func (m *CreatorResponse) String() string { return proto.CompactTextString(m) }
func (*CreatorResponse) ProtoMessage()    {}
func (*CreatorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_03eb4c42a966661e, []int{0}
}
func (m *CreatorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreatorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreatorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreatorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatorResponse.Merge(m, src)
}
func (m *CreatorResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreatorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatorResponse proto.InternalMessageInfo

func (m *CreatorResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreatorResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CreatorResponse) GetUsername() *types.StringValue {
	if m != nil {
		return m.Username
	}
	return nil
}

func (m *CreatorResponse) GetName() *types.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (*CreatorResponse) XXX_MessageName() string {
	return "marketplace.api.v1.marketplace.CreatorResponse"
}

type CreatorRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatorRequest) Reset()         { *m = CreatorRequest{} }
func (m *CreatorRequest) String() string { return proto.CompactTextString(m) }
func (*CreatorRequest) ProtoMessage()    {}
func (*CreatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_03eb4c42a966661e, []int{1}
}
func (m *CreatorRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreatorRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatorRequest.Merge(m, src)
}
func (m *CreatorRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatorRequest proto.InternalMessageInfo

func (m *CreatorRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (*CreatorRequest) XXX_MessageName() string {
	return "marketplace.api.v1.marketplace.CreatorRequest"
}

type CreatorsRequest struct {
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatorsRequest) Reset()         { *m = CreatorsRequest{} }
func (m *CreatorsRequest) String() string { return proto.CompactTextString(m) }
func (*CreatorsRequest) ProtoMessage()    {}
func (*CreatorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_03eb4c42a966661e, []int{2}
}
func (m *CreatorsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreatorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreatorsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreatorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatorsRequest.Merge(m, src)
}
func (m *CreatorsRequest) XXX_Size() int {
	return m.Size()
}
func (m *CreatorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatorsRequest proto.InternalMessageInfo

func (m *CreatorsRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *CreatorsRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *CreatorsRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (*CreatorsRequest) XXX_MessageName() string {
	return "marketplace.api.v1.marketplace.CreatorsRequest"
}

type CreatorsResponse struct {
	Items                []*CreatorResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalCount           int64              `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Count                int64              `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Prev                 bool               `protobuf:"varint,4,opt,name=prev,proto3" json:"prev,omitempty"`
	Next                 bool               `protobuf:"varint,5,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreatorsResponse) Reset()         { *m = CreatorsResponse{} }
func (m *CreatorsResponse) String() string { return proto.CompactTextString(m) }
func (*CreatorsResponse) ProtoMessage()    {}
func (*CreatorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_03eb4c42a966661e, []int{3}
}
func (m *CreatorsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreatorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreatorsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreatorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatorsResponse.Merge(m, src)
}
func (m *CreatorsResponse) XXX_Size() int {
	return m.Size()
}
func (m *CreatorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatorsResponse proto.InternalMessageInfo

func (m *CreatorsResponse) GetItems() []*CreatorResponse {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *CreatorsResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *CreatorsResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CreatorsResponse) GetPrev() bool {
	if m != nil {
		return m.Prev
	}
	return false
}

func (m *CreatorsResponse) GetNext() bool {
	if m != nil {
		return m.Next
	}
	return false
}

func (*CreatorsResponse) XXX_MessageName() string {
	return "marketplace.api.v1.marketplace.CreatorsResponse"
}

type ArtsByCreatorRequest struct {
	CreatorId            int64    `protobuf:"varint,1,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Offset               uint64   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint64   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArtsByCreatorRequest) Reset()         { *m = ArtsByCreatorRequest{} }
func (m *ArtsByCreatorRequest) String() string { return proto.CompactTextString(m) }
func (*ArtsByCreatorRequest) ProtoMessage()    {}
func (*ArtsByCreatorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_03eb4c42a966661e, []int{4}
}
func (m *ArtsByCreatorRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ArtsByCreatorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ArtsByCreatorRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ArtsByCreatorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtsByCreatorRequest.Merge(m, src)
}
func (m *ArtsByCreatorRequest) XXX_Size() int {
	return m.Size()
}
func (m *ArtsByCreatorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtsByCreatorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArtsByCreatorRequest proto.InternalMessageInfo

func (m *ArtsByCreatorRequest) GetCreatorId() int64 {
	if m != nil {
		return m.CreatorId
	}
	return 0
}

func (m *ArtsByCreatorRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ArtsByCreatorRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (*ArtsByCreatorRequest) XXX_MessageName() string {
	return "marketplace.api.v1.marketplace.ArtsByCreatorRequest"
}
func init() {
	proto.RegisterType((*CreatorResponse)(nil), "marketplace.api.v1.marketplace.CreatorResponse")
	golang_proto.RegisterType((*CreatorResponse)(nil), "marketplace.api.v1.marketplace.CreatorResponse")
	proto.RegisterType((*CreatorRequest)(nil), "marketplace.api.v1.marketplace.CreatorRequest")
	golang_proto.RegisterType((*CreatorRequest)(nil), "marketplace.api.v1.marketplace.CreatorRequest")
	proto.RegisterType((*CreatorsRequest)(nil), "marketplace.api.v1.marketplace.CreatorsRequest")
	golang_proto.RegisterType((*CreatorsRequest)(nil), "marketplace.api.v1.marketplace.CreatorsRequest")
	proto.RegisterType((*CreatorsResponse)(nil), "marketplace.api.v1.marketplace.CreatorsResponse")
	golang_proto.RegisterType((*CreatorsResponse)(nil), "marketplace.api.v1.marketplace.CreatorsResponse")
	proto.RegisterType((*ArtsByCreatorRequest)(nil), "marketplace.api.v1.marketplace.ArtsByCreatorRequest")
	golang_proto.RegisterType((*ArtsByCreatorRequest)(nil), "marketplace.api.v1.marketplace.ArtsByCreatorRequest")
}

func init() { proto.RegisterFile("api/v1/marketplace/creators.proto", fileDescriptor_03eb4c42a966661e) }
func init() {
	golang_proto.RegisterFile("api/v1/marketplace/creators.proto", fileDescriptor_03eb4c42a966661e)
}

var fileDescriptor_03eb4c42a966661e = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xb1, 0x8e, 0xd3, 0x40,
	0x10, 0xd5, 0xc6, 0xce, 0x71, 0x99, 0xa0, 0x03, 0xad, 0x4e, 0xc8, 0x3a, 0x81, 0xf1, 0xb9, 0x4a,
	0xc3, 0x9a, 0x3b, 0x1a, 0x5a, 0xee, 0x44, 0x41, 0x41, 0xb3, 0x48, 0x14, 0x34, 0xa7, 0x8d, 0x3d,
	0x31, 0x2b, 0x6c, 0xaf, 0xb3, 0xbb, 0x0e, 0xf0, 0x45, 0xfc, 0x02, 0x25, 0xe5, 0x95, 0x7c, 0x02,
	0xca, 0xfd, 0x08, 0xf2, 0x6e, 0xe2, 0x44, 0x29, 0x10, 0xd7, 0xcd, 0x7b, 0xf3, 0xc6, 0x7e, 0xf3,
	0x66, 0xe1, 0x5c, 0xb4, 0x32, 0x5b, 0x5d, 0x64, 0xb5, 0xd0, 0x5f, 0xd0, 0xb6, 0x95, 0xc8, 0x31,
	0xcb, 0x35, 0x0a, 0xab, 0xb4, 0x61, 0xad, 0x56, 0x56, 0xd1, 0x78, 0xaf, 0xc7, 0x44, 0x2b, 0xd9,
	0xea, 0x82, 0xed, 0x51, 0x67, 0x71, 0xa9, 0x54, 0x59, 0x61, 0xe6, 0xd4, 0xf3, 0x6e, 0x91, 0x7d,
	0xd5, 0xa2, 0x6d, 0x71, 0x3b, 0x7f, 0xf6, 0xa2, 0x94, 0xf6, 0x73, 0x37, 0x67, 0xb9, 0xaa, 0xb3,
	0x52, 0x95, 0x6a, 0x27, 0xec, 0x91, 0x03, 0xae, 0xf2, 0xf2, 0xf4, 0x07, 0x81, 0x47, 0xd7, 0xde,
	0x01, 0x47, 0xd3, 0xaa, 0xc6, 0x20, 0x3d, 0x81, 0x91, 0x2c, 0x22, 0x92, 0x90, 0x59, 0xc0, 0x47,
	0xb2, 0xa0, 0x11, 0x3c, 0x10, 0x45, 0xa1, 0xd1, 0x98, 0x68, 0x94, 0x90, 0xd9, 0x84, 0x6f, 0x21,
	0x7d, 0x0d, 0xc7, 0x9d, 0x41, 0xdd, 0x88, 0x1a, 0xa3, 0x20, 0x21, 0xb3, 0xe9, 0xe5, 0x53, 0xe6,
	0xfd, 0xb1, 0xed, 0x6f, 0xd9, 0x07, 0xab, 0x65, 0x53, 0x7e, 0x14, 0x55, 0x87, 0x7c, 0x50, 0xd3,
	0x97, 0x10, 0xba, 0xa9, 0xf0, 0x3f, 0xa6, 0x9c, 0x32, 0x4d, 0xe0, 0x64, 0x30, 0xba, 0xec, 0xd0,
	0xd8, 0x43, 0x9f, 0xe9, 0xfb, 0x61, 0x15, 0xb3, 0x95, 0x3c, 0x04, 0xb2, 0x74, 0x8a, 0x09, 0x27,
	0x4b, 0xfa, 0x04, 0x8e, 0xd4, 0x62, 0x61, 0xd0, 0xba, 0x3d, 0x42, 0xbe, 0x41, 0xf4, 0x14, 0xc6,
	0x95, 0xac, 0xa5, 0x75, 0x3b, 0x84, 0xdc, 0x83, 0xf4, 0x27, 0x81, 0xc7, 0xbb, 0xef, 0x6d, 0xb2,
	0x79, 0x0b, 0x63, 0x69, 0xb1, 0x36, 0x11, 0x49, 0x82, 0xd9, 0xf4, 0x32, 0x63, 0xff, 0x3e, 0x17,
	0x3b, 0xc8, 0x96, 0xfb, 0x69, 0xfa, 0x1c, 0xa6, 0x56, 0x59, 0x51, 0xdd, 0xe4, 0xaa, 0x6b, 0xbc,
	0x9d, 0x80, 0x83, 0xa3, 0xae, 0x7b, 0xa6, 0xb7, 0xe4, 0x5b, 0x81, 0x6b, 0x79, 0x40, 0x29, 0x84,
	0xad, 0xc6, 0x95, 0x4b, 0xed, 0x98, 0xbb, 0xba, 0xe7, 0x1a, 0xfc, 0x66, 0xa3, 0xb1, 0xe7, 0xfa,
	0x3a, 0xcd, 0xe1, 0xf4, 0x8d, 0xb6, 0xe6, 0xea, 0xfb, 0x41, 0x62, 0xcf, 0x00, 0x36, 0xcf, 0xed,
	0x66, 0x48, 0x6e, 0xb2, 0x61, 0xde, 0x15, 0xf7, 0xcb, 0xe7, 0xea, 0xfc, 0x76, 0x1d, 0x93, 0xdf,
	0xeb, 0x98, 0xfc, 0x59, 0xc7, 0xe4, 0xd7, 0x5d, 0x4c, 0x6e, 0xef, 0x62, 0xf2, 0x69, 0xba, 0xb7,
	0xfd, 0xfc, 0xc8, 0xdd, 0xf3, 0xd5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xee, 0x45, 0x4d, 0xfd,
	0xf8, 0x02, 0x00, 0x00,
}

func (m *CreatorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreatorResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.Id))
	}
	if len(m.Address) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintCreators(dAtA, i, uint64(len(m.Address)))
		i += copy(dAtA[i:], m.Address)
	}
	if m.Username != nil {
		dAtA[i] = 0x1a
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.Username.Size()))
		n1, err1 := m.Username.MarshalTo(dAtA[i:])
		if err1 != nil {
			return 0, err1
		}
		i += n1
	}
	if m.Name != nil {
		dAtA[i] = 0x22
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.Name.Size()))
		n2, err2 := m.Name.MarshalTo(dAtA[i:])
		if err2 != nil {
			return 0, err2
		}
		i += n2
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreatorRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreatorRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreatorsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreatorsRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Q) > 0 {
		dAtA[i] = 0xa
		i++
		i = encodeVarintCreators(dAtA, i, uint64(len(m.Q)))
		i += copy(dAtA[i:], m.Q)
	}
	if m.Offset != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *CreatorsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreatorsResponse) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, msg := range m.Items {
			dAtA[i] = 0xa
			i++
			i = encodeVarintCreators(dAtA, i, uint64(msg.Size()))
			n, err := msg.MarshalTo(dAtA[i:])
			if err != nil {
				return 0, err
			}
			i += n
		}
	}
	if m.TotalCount != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.TotalCount))
	}
	if m.Count != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.Count))
	}
	if m.Prev {
		dAtA[i] = 0x20
		i++
		if m.Prev {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.Next {
		dAtA[i] = 0x28
		i++
		if m.Next {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i++
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ArtsByCreatorRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ArtsByCreatorRequest) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.CreatorId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.CreatorId))
	}
	if m.Offset != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.Offset))
	}
	if m.Limit != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintCreators(dAtA, i, uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintCreators(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *CreatorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCreators(uint64(m.Id))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovCreators(uint64(l))
	}
	if m.Username != nil {
		l = m.Username.Size()
		n += 1 + l + sovCreators(uint64(l))
	}
	if m.Name != nil {
		l = m.Name.Size()
		n += 1 + l + sovCreators(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreatorRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovCreators(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreatorsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Q)
	if l > 0 {
		n += 1 + l + sovCreators(uint64(l))
	}
	if m.Offset != 0 {
		n += 1 + sovCreators(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovCreators(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreatorsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovCreators(uint64(l))
		}
	}
	if m.TotalCount != 0 {
		n += 1 + sovCreators(uint64(m.TotalCount))
	}
	if m.Count != 0 {
		n += 1 + sovCreators(uint64(m.Count))
	}
	if m.Prev {
		n += 2
	}
	if m.Next {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ArtsByCreatorRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CreatorId != 0 {
		n += 1 + sovCreators(uint64(m.CreatorId))
	}
	if m.Offset != 0 {
		n += 1 + sovCreators(uint64(m.Offset))
	}
	if m.Limit != 0 {
		n += 1 + sovCreators(uint64(m.Limit))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovCreators(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozCreators(x uint64) (n int) {
	return sovCreators(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *CreatorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCreators
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreatorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreatorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreators
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreators
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCreators
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCreators
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Username == nil {
				m.Username = &types.StringValue{}
			}
			if err := m.Username.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCreators
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCreators
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Name == nil {
				m.Name = &types.StringValue{}
			}
			if err := m.Name.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipCreators(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreatorRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCreators
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreatorRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreatorRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCreators(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreatorsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCreators
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreatorsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreatorsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Q", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthCreators
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthCreators
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Q = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCreators(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreatorsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCreators
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreatorsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreatorsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthCreators
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthCreators
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &CreatorResponse{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalCount", wireType)
			}
			m.TotalCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalCount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Count", wireType)
			}
			m.Count = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Count |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Prev", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Prev = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Next", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Next = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipCreators(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ArtsByCreatorRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowCreators
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ArtsByCreatorRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ArtsByCreatorRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatorId", wireType)
			}
			m.CreatorId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatorId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipCreators(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthCreators
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipCreators(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowCreators
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowCreators
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthCreators
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthCreators
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowCreators
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipCreators(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthCreators
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthCreators = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowCreators   = fmt.Errorf("proto: integer overflow")
)
